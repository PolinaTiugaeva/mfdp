version: "3"
services:
  app:
    build: ./app/
    image: ml-service
    env_file:
      - ./app/.env
    volumes:
      - ./app:/app
    depends_on:
      rabbitmq:
        condition: service_healthy

  search:
    build: ./search/
    image: search
    env_file:
      - ./search/.env
    volumes:
      - ./search:/search
    depends_on:
      rabbitmq:
        condition: service_healthy
    deploy:
      mode: replicated
      replicas: 1

  sort:
    build: ./sort/
    image: sort
    env_file:
      - ./sort/.env
    volumes:
      - ./sort:/sort
    depends_on:
      rabbitmq:
        condition: service_healthy
    deploy:
      mode: replicated
      replicas: 1

  notifier:
    build: ./notifier/
    image: notifier
    env_file:
      - ./notifier/.env
    volumes:
      - ./notifier:/notifier
    depends_on:
      rabbitmq:
        condition: service_healthy

  rabbitmq:
    image: rabbitmq:3.13.1-management
    hostname: rabbitmq
    restart: always
    environment:
      - RABBITMQ_DEFAULT_USER=rmuser
      - RABBITMQ_DEFAULT_PASS=rmpassword
    ports:
      - 15672:15672
      - 5672:5672
    volumes:
      - ./rabbitmq:/var/lib/rabbitmq
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 10s
      retries: 5

  #dataloader:
  #  build: ./dataloader/
  #  image: dataloader
  #  volumes:
  #    - ./dataloader:/dataloader

  chromadb:
    image: chromadb/chroma:0.5.11
    volumes:
      - ./chromadb:/chroma/chroma
    environment:
      - IS_PRESISTANT=TRUE
      - PERSIST_DIRECTORY=/chroma/chroma
    ports:
      - 8000:8000

  database:
    image: postgres:latest 
    volumes:
      - db_data:/var/lib/postgresql/data 
    expose:
      - 5432
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=service_db

volumes:
  db_data:

   